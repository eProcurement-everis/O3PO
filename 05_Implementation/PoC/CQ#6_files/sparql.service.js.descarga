define([],
    function () {

        angular
            .module('graphdb.framework.sparql.services', [])
            .factory('SparqlService', SparqlService);

        SparqlService.$inject = ['$http', '$repositories'];
        function SparqlService($http, $repositories) {
            return {
                getRepositorySize: getRepositorySize,
                getRepositoryNamespaces: getRepositoryNamespaces,
                getSavedQueries: getSavedQueries,
                getSavedQuery: getSavedQuery,
                addKnownPrefixes: addKnownPrefixes,
                editSavedQuery: editSavedQuery,
                deleteSavedQuery: deleteSavedQuery,
                addNewSavedQuery: addNewSavedQuery
            };

            function getRepositorySize() {
                return $http.get('repositories/' + $repositories.getActiveRepository() + '/size');
            }

            function getRepositoryNamespaces() {
                return $http.get('repositories/' + $repositories.getActiveRepository() + '/namespaces');
            }

            function getSavedQueries() {
                return $http.get('rest/sparql/saved-queries');
            }

            function getSavedQuery(savedQueryName) {
                return $http.get('rest/sparql/saved-queries?name=' + encodeURIComponent(savedQueryName));
            }

            function addKnownPrefixes(prefixes) {
                return $http.post('rest/sparql/addKnownPrefixes', prefixes);
            }

            function editSavedQuery(query) {
                return $http.put('rest/sparql/saved-queries', query);
            }

            function deleteSavedQuery(savedQueryName) {
                return $http.delete('rest/sparql/saved-queries?name=' + encodeURIComponent(savedQueryName));
            }

            function addNewSavedQuery(query) {
                return $http.post('rest/sparql/saved-queries', query);
            }
        }
    });
